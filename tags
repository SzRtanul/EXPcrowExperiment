C	main.cpp	/^pqxx::connection C = pqxx::connection(R"(dbname = testdb user=postgres password=test123 hostaddr/;"	v	typeref:typename:pqxx::connection
StoreNames	main.cpp	/^	StoreNames(char* characterChain){$/;"	f	struct:StoreNames	file:
StoreNames	main.cpp	/^struct StoreNames{$/;"	s	file:
WordsCompare	main.cpp	/^	WordsCompare(int leghosszabbSzo, int szavakSzama){$/;"	f	struct:WordsCompare	file:
WordsCompare	main.cpp	/^struct WordsCompare{$/;"	s	file:
__anon3b5b11db0102	main.cpp	/^		CROW_ROUTE(app, "\/login")([](const crow::request& req) {$/;"	f	function:main	file:
__anon3b5b11db0202	main.cpp	/^		CROW_ROUTE(app, "\/ujvacsora")([](){$/;"	f	function:main	file:
__anon3b5b11db0302	main.cpp	/^		CROW_ROUTE(app, "\/addrecord\/<string>").methods("POST"_method)([](const crow::request& req, s/;"	f	function:main	file:
__anon3b5b11db0402	main.cpp	/^		CROW_ROUTE(app, "\/callquery").methods("POST"_method)([](const crow::request& req){$/;"	f	function:main	file:
__anon3b5b11db0502	main.cpp	/^		CROW_ROUTE(app, "\/deletefrom\/<string>\/<int>").methods("DELETE"_method)([](const crow::reque/;"	f	function:main	file:
__anon3b5b11db0602	main.cpp	/^		CROW_ROUTE(app, "\/update\/<string>\/<int>").methods("PUT"_method)([](const crow::request& req/;"	f	function:main	file:
__anon3b5b11db0702	main.cpp	/^	    CROW_ROUTE(app, "\/callmethod\/<string>").methods("GET"_method)([](const crow::request& req/;"	f	function:main	file:
__anon3b5b11db0802	main.cpp	/^	CROW_ROUTE(app, "\/")([](){$/;"	f	function:main	file:
__anon3b5b11db0902	main.cpp	/^    CROW_ROUTE(app, "\/exat")([](){$/;"	f	function:main	file:
__anon3b5b11db0a02	main.cpp	/^    CROW_ROUTE(app, "\/exat\/<int>").methods("POST"_method)([](int a){ $/;"	f	function:main	file:
__anon3b5b11db0b02	main.cpp	/^	CROW_ROUTE(app, "\/pelda\/<int>").methods("POST"_method)([](const crow::request& req, const int/;"	f	function:main	file:
bynarytree	main.cpp	/^	int* bynarytree;$/;"	m	struct:WordsCompare	typeref:typename:int *	file:
byoszlop	main.cpp	/^	char* byoszlop;$/;"	m	struct:WordsCompare	typeref:typename:char *	file:
bywoherin	main.cpp	/^	int* bywoherin; \/\/ Inicializálás binarytree*32, Csökkentés: Ahány betű$/;"	m	struct:WordsCompare	typeref:typename:int *	file:
characterChain	main.cpp	/^	char* characterChain;$/;"	m	struct:StoreNames	typeref:typename:char *	file:
doSyntaxtCheckPreparation	main.cpp	/^WordsCompare doSyntaxtCheckPreparation(char* characterChain){	$/;"	f	typeref:typename:WordsCompare
exat	main.cpp	/^int exat=0;$/;"	v	typeref:typename:int
getCallMethod	main.cpp	/^inline std::string getCallMethod(pqxx::work &W, std::string usertoken, std::string methodname){$/;"	f	typeref:typename:std::string
getCallSimpleQuery	main.cpp	/^inline std::string getCallSimpleQuery(pqxx::work &W, std::string tablanev, std::string usertoken/;"	f	typeref:typename:std::string
getDBQueryUnit	main.cpp	/^inline std::string getDBQueryUnit(std::string unit, std::string value){$/;"	f	typeref:typename:std::string
getSQLQuery	main.cpp	/^inline std::string getSQLQuery(pqxx::work &W, const char* querytext){$/;"	f	typeref:typename:std::string
getSepNumber	main.cpp	/^	int getSepNumber(){$/;"	f	struct:StoreNames	typeref:typename:int	file:
getTextWithJSONValues	main.cpp	/^inline std::string getTextWithJSONValues(WordsCompare& wordsCompare, StoreNames storeNames[], st/;"	f	typeref:typename:std::string
getWithoutSpace	main.cpp	/^inline std::string getWithoutSpace(string text){$/;"	f	typeref:typename:std::string
initSepIndexes	main.cpp	/^	void initSepIndexes(){$/;"	f	struct:StoreNames	typeref:typename:void	file:
isBenneVanRendezett	main.cpp	/^inline bool isBenneVanRendezett(const char array[][50], const char values[][50], int lengtharray/;"	f	typeref:typename:bool
leghosszabbSzo	main.cpp	/^	int leghosszabbSzo;$/;"	m	struct:WordsCompare	typeref:typename:int	file:
length	main.cpp	/^	int length;$/;"	m	struct:StoreNames	typeref:typename:int	file:
main	main.cpp	/^int main(){$/;"	f	typeref:typename:int
sepIndexes	main.cpp	/^	int* sepIndexes;$/;"	m	struct:StoreNames	typeref:typename:int *	file:
signal_handler	main.cpp	/^void signal_handler(int signal) {$/;"	f	typeref:typename:void
szavakSzama	main.cpp	/^	int szavakSzama;$/;"	m	struct:WordsCompare	typeref:typename:int	file:
szoRaktarSQLSyntaxt	main.cpp	/^char szoRaktarSQLSyntaxt[] =$/;"	v	typeref:typename:char[]
vegsoErtek	main.cpp	/^	int* vegsoErtek;$/;"	m	struct:WordsCompare	typeref:typename:int *	file:
vegsoErtekOszlopSzam	main.cpp	/^	char* vegsoErtekOszlopSzam; \/\/ Inicializálás a szavak számával$/;"	m	struct:WordsCompare	typeref:typename:char *	file:
~StoreNames	main.cpp	/^	~StoreNames(){$/;"	f	struct:StoreNames	file:
~WordsCompare	main.cpp	/^	~WordsCompare(){$/;"	f	struct:WordsCompare	file:
