C	main.cpp	/^pqxx::connection C = pqxx::connection(R"(dbname = testdb3 user=postgres password=test123 hostadd/;"	v	typeref:typename:pqxx::connection
PoolDBConnection	main.cpp	/^	PoolDBConnection(std::string conninfo, int min_size, int max_size){$/;"	f	struct:PoolDBConnection	file:
PoolDBConnection	main.cpp	/^struct PoolDBConnection{$/;"	s	file:
StoreNames	main.cpp	/^	StoreNames(char* characterChain){$/;"	f	struct:StoreNames	file:
StoreNames	main.cpp	/^struct StoreNames{$/;"	s	file:
WordsCompare	main.cpp	/^	WordsCompare(int leghosszabbSzo, int szavakSzama){$/;"	f	struct:WordsCompare	file:
WordsCompare	main.cpp	/^struct WordsCompare{$/;"	s	file:
__anon3b5b11db0102	main.cpp	/^		CROW_ROUTE(app, "\/login")([](const crow::request& req) {$/;"	f	function:main	file:
__anon3b5b11db0202	main.cpp	/^		CROW_ROUTE(app, "\/callquery").methods("POST"_method)([&compareWords](const crow::request& req/;"	f	function:main	file:
__anon3b5b11db0302	main.cpp	/^	CROW_ROUTE(app, "\/")([](){$/;"	f	function:main	file:
__anon3b5b11db0402	main.cpp	/^	CROW_ROUTE(app, "\/pelda\/<int>").methods("POST"_method)([](const crow::request& req, const int/;"	f	function:main	file:
active_connections	main.cpp	/^	int active_connections;$/;"	m	struct:PoolDBConnection	typeref:typename:int	file:
bynarytree	main.cpp	/^	int* bynarytree;$/;"	m	struct:WordsCompare	typeref:typename:int *	file:
byoszlop	main.cpp	/^	char* byoszlop;$/;"	m	struct:WordsCompare	typeref:typename:char *	file:
bywoherin	main.cpp	/^	int* bywoherin; \/\/ Inicializálás binarytree*32, Csökkentés: Ahány betű$/;"	m	struct:WordsCompare	typeref:typename:int *	file:
characterChain	main.cpp	/^	char* characterChain;$/;"	m	struct:StoreNames	typeref:typename:char *	file:
conninfo	main.cpp	/^	std::string conninfo;$/;"	m	struct:PoolDBConnection	typeref:typename:std::string	file:
create_connection	main.cpp	/^	inline bool create_connection(){$/;"	f	struct:PoolDBConnection	typeref:typename:bool	file:
doSyntaxtCheckPreparation	main.cpp	/^WordsCompare doSyntaxtCheckPreparation(char* characterChain){	$/;"	f	typeref:typename:WordsCompare
exat	main.cpp	/^int exat=0;$/;"	v	typeref:typename:int
getDBConn	main.cpp	/^	std::shared_ptr<pqxx::connection> getDBConn(){$/;"	f	struct:PoolDBConnection	typeref:typename:std::shared_ptr<pqxx::connection>	file:
getSQLQuery	main.cpp	/^inline std::string getSQLQuery(std::shared_ptr<pqxx::connection> NC, const char* querytext){$/;"	f	typeref:typename:std::string
getSQLQuery	main.cpp	/^inline std::string getSQLQuery(std::shared_ptr<pqxx::connection> NC, const char* querytext, cons/;"	f	typeref:typename:std::string
getSepNumber	main.cpp	/^	int getSepNumber(){$/;"	f	struct:StoreNames	typeref:typename:int	file:
getTextWithJSONValues	main.cpp	/^inline std::string getTextWithJSONValues($/;"	f	typeref:typename:std::string
getWithoutSpace	main.cpp	/^inline std::string getWithoutSpace(string text){$/;"	f	typeref:typename:std::string
giveBackConnect	main.cpp	/^	void giveBackConnect(std::shared_ptr<pqxx::connection> conn){$/;"	f	struct:PoolDBConnection	typeref:typename:void	file:
initSepIndexes	main.cpp	/^	void initSepIndexes(){$/;"	f	struct:StoreNames	typeref:typename:void	file:
leghosszabbSzo	main.cpp	/^	int leghosszabbSzo;$/;"	m	struct:WordsCompare	typeref:typename:int	file:
length	main.cpp	/^	int length;$/;"	m	struct:StoreNames	typeref:typename:int	file:
main	main.cpp	/^int main(){$/;"	f	typeref:typename:int
max_size	main.cpp	/^	int max_size;$/;"	m	struct:PoolDBConnection	typeref:typename:int	file:
min_size	main.cpp	/^	int min_size;$/;"	m	struct:PoolDBConnection	typeref:typename:int	file:
mtx	main.cpp	/^	std::mutex mtx;$/;"	m	struct:PoolDBConnection	typeref:typename:std::mutex	file:
pool	main.cpp	/^	std::queue<std::shared_ptr<pqxx::connection>> pool;$/;"	m	struct:PoolDBConnection	typeref:typename:std::queue<std::shared_ptr<pqxx::connection>>	file:
poolDB	main.cpp	/^PoolDBConnection poolDB("dbname = testdb3 user=postgres password=test123 hostaddr=127.0.0.1 port/;"	v	typeref:typename:PoolDBConnection
scale_threshold	main.cpp	/^	const std::chrono::milliseconds scale_threshold{2000};$/;"	m	struct:PoolDBConnection	typeref:typename:const std::chrono::milliseconds	file:
sepIndexes	main.cpp	/^	int* sepIndexes;$/;"	m	struct:StoreNames	typeref:typename:int *	file:
signal_handler	main.cpp	/^void signal_handler(int signal) {$/;"	f	typeref:typename:void
szavakSzama	main.cpp	/^	int szavakSzama;$/;"	m	struct:WordsCompare	typeref:typename:int	file:
szoRaktarSQLSyntaxt	main.cpp	/^char szoRaktarSQLSyntaxt[] =$/;"	v	typeref:typename:char[]
vegsoErtek	main.cpp	/^	int* vegsoErtek;$/;"	m	struct:WordsCompare	typeref:typename:int *	file:
vegsoErtekOszlopSzam	main.cpp	/^	char* vegsoErtekOszlopSzam; \/\/ Inicializálás a szavak számával$/;"	m	struct:WordsCompare	typeref:typename:char *	file:
whatIsChar	main.cpp	/^inline bool whatIsChar(char character){$/;"	f	typeref:typename:bool
~StoreNames	main.cpp	/^	~StoreNames(){$/;"	f	struct:StoreNames	file:
~WordsCompare	main.cpp	/^	~WordsCompare(){$/;"	f	struct:WordsCompare	file:
